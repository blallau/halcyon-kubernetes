---
# Copyright 2016, AT&T, and it's Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
- name: check for bootstrap
  shell: kubectl get nodes
  register: kube_bootstrap
  failed_when: false
  ignore_errors: true

- name: debug bootstrap output
  debug: msg="{{ kube_bootstrap }}"

- name: collect api endpoint from masters
  shell: ip addr show {{ public_iface }} | grep "inet\b" | head -n 1 | awk '{print $2}' | cut -d/ -f1
  register: kube_api_endpoint

- name: kubernetes master api endpoints
  debug: msg={{ kube_api_endpoint.stdout }}

- name: initialize the kubernetes master
  become: yes
  shell: "kubeadm init --token={{ init_token }} --kubernetes-version={{ kube_version }} {{insecure_api_opts}}"
  when: "'was refused' in kube_bootstrap.stderr and kube_sdn != 'flannel' and kube_sdn != 'calico'"
  register: initout

- name: initialize the kubernetes master for calico
  become: yes
  shell: "kubeadm init --token={{ init_token }} --kubernetes-version={{ kube_version }} --pod-network-cidr={{ kube_cluster_ip_cidr }} {{insecure_api_opts}}"
  when: "'was refused' in kube_bootstrap.stderr and kube_sdn == 'calico'"
  register: initout

- name: initialize the kubernetes master for flannel
  become: yes
  shell: "kubeadm init --token={{ init_token }} --kubernetes-version={{ kube_version }} --api-advertise-addresses={{ kube_api_endpoint.stdout }} --pod-network-cidr={{ kube_cluster_ip_cidr }} {{insecure_api_opts}}"
  when: "'was refused' in kube_bootstrap.stderr and kube_sdn == 'flannel'"
  register: initout

- name: display kubeadm config
  become: yes
  shell: "kubeadm config view"
  register: kubeadm_config

- name: debug kubeadm config
  debug: msg="{{ kubeadm_config }}"

- name: make kubeconfig directory
  file:
    path: $HOME/.kube
    state: directory

- name: copy kubeconfig
  become: yes
  shell: "cp /etc/kubernetes/admin.conf {{ ansible_user_dir}}/.kube/config"

- name: change permissions on kubeconfig
  become: yes
  file:
    path: "{{ ansible_user_dir }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: check kubectl after initializing the kubernetes master
  shell: kubectl get nodes
  register: kube_bootstrap
  ignore_errors: true

- name: debug kubectl output
  debug: msg="{{ kube_bootstrap }}"

- name: remove NoSchedule taint from master
  shell: "kubectl taint node $(hostname) node-role.kubernetes.io/master:NoSchedule-"
  when: is_master_schedulable
  register: remove_taint_output

- name: debug kubectl output
  debug: msg="{{ remove_taint_output }}"
  when: is_master_schedulable
